import pygame, sys
from pygame.locals import *
import copy
import random
pygame.init()
import pickle


def fenetre():
    HAUTEUR =525
    LARGEUR = 800
    WHITE = (255,255,255)
    RED = (155,0,0)
    BLACK = (0,0,0)
    RED1 = (120,0,0)
    jeu = pygame.display.set_mode((LARGEUR,HAUTEUR))
    pygame.display.set_caption("Pentago GUI")
    n=[6]
    nbrJoueur=[0]
    menu1 (jeu,WHITE,BLACK,n)
    pygame.draw.rect(jeu,BLACK,(0,0,800,525),0)
    menu2 (jeu,WHITE,BLACK,nbrJoueur)
    pygame.draw.rect(jeu,BLACK,(0,0,800,525),0)
    liste = [[0]*n[0] for i in range (n[0])]
    liste1 = copy.deepcopy(liste)
    b=len(liste)
    joueurActif=[1]
    flecheOK=[0]

    quadrant(jeu,RED,RED1,liste1,b)

    if nbrJoueur[0]==2:
        inProgress = True
        while inProgress:
            for event in pygame.event.get():
                if event.type == QUIT:
                    inProgress = False
                sauvegarde(jeu,b,BLACK,WHITE,liste,event)

                ChargSauve = pygame.draw.rect(jeu,BLACK,(66*b,350,145,50),0)
                fontObj = pygame.font.Font('freesansbold.ttf',25)
                texteSurface = fontObj.render('Charger',True,WHITE,BLACK)
                texteRect = texteSurface.get_rect()
                pygame.draw.rect(jeu,WHITE,(66*b,350,145,50),2)
                texteRect.topleft = (69*b+4,363)
                jeu.blit(texteSurface,texteRect)

                if event.type == MOUSEBUTTONDOWN and ChargSauve.collidepoint(event.pos):

                    if b==6:
                        with open('6x6.txt', 'rb') as fichier:
                            mon_depickler = pickle.Unpickler(fichier)
                            liste = mon_depickler.load()

                    if b==8:
                        with open('8x8.txt', 'rb') as fichier:
                            mon_depickler = pickle.Unpickler(fichier)
                            liste = mon_depickler.load()

                alignements(jeu,liste,BLACK,WHITE,joueurActif)
                MajQuadrant(jeu,WHITE,BLACK,liste,b,liste1,RED,RED1)
                tour(event,joueurActif,jeu,WHITE,BLACK,liste,b,liste1,flecheOK)
                #print(liste)

            pygame.display.update()
        pygame.quit()




    elif nbrJoueur[0]==1:
        inProgress = True
        while inProgress:
            for event in pygame.event.get():
                if event.type == QUIT:
                    inProgress = False
                sauvegarde(jeu,b,BLACK,WHITE,liste,event)

                ChargSauve = pygame.draw.rect(jeu,BLACK,(66*b,350,145,50),0)
                fontObj = pygame.font.Font('freesansbold.ttf',25)
                texteSurface = fontObj.render('Charger',True,WHITE,BLACK)
                texteRect = texteSurface.get_rect()
                pygame.draw.rect(jeu,WHITE,(66*b,350,145,50),2)
                texteRect.topleft = (69*b+4,363)
                jeu.blit(texteSurface,texteRect)

                if event.type == MOUSEBUTTONDOWN and ChargSauve.collidepoint(event.pos):

                    with open('6x6.txt', 'rb') as fichier:
                        mon_depickler = pickle.Unpickler(fichier)
                        liste = mon_depickler.load()

                alignements(jeu,liste,BLACK,WHITE,joueurActif)
                MajQuadrant(jeu,WHITE,BLACK,liste,b,liste1,RED,RED1)
                tourordi(event,joueurActif,jeu,WHITE,BLACK,liste,b,liste1,flecheOK)

            pygame.display.update()
        pygame.quit()

def alignements(jeu,liste,BLACK,WHITE,joueurActif):
    n = 6
    j = 5

    if joueurActif[0] == 1:
        for i in range(n-j+1):
            for x in range(n):
                if liste[x][i] == liste[x][i+1] == liste[x][i+2] == liste[x][i+3] == liste[x][i+4]and liste[x][i] != 0:
                    pygame.draw.rect(jeu,BLACK,(66*n,300,205,50),0)
                    fontObj = pygame.font.Font('freesansbold.ttf',20)
                    texteSurface = fontObj.render('Le joueur 1 a gagné' ,True,WHITE,BLACK)
                    texteRect = texteSurface.get_rect()
                    pygame.draw.rect(jeu,WHITE,(66*n,300,205,50),2)
                    texteRect.topleft = (67*n,315)
                    jeu.blit(texteSurface,texteRect)
                    fin()

        for i in range (n):
           for x in range (n-j+1):
               if liste[x][i] == liste[x+1][i] == liste[x+2][i] == liste[x+3][i] == liste[x+4][i]and liste[x][i] != 0:
                    pygame.draw.rect(jeu,BLACK,(66*n,300,205,50),0)
                    fontObj = pygame.font.Font('freesansbold.ttf',20)
                    texteSurface = fontObj.render('Le joueur 1 a gagné' ,True,WHITE,BLACK)
                    texteRect = texteSurface.get_rect()
                    pygame.draw.rect(jeu,WHITE,(66*n,300,205,50),2)
                    texteRect.topleft = (67*n,315)
                    jeu.blit(texteSurface,texteRect)
                    fin()

        for i in range (n-j+1):
            for x in range (n-j+1):
                if liste[x][i] == liste[x+1][i+1] == liste[x+2][i+2] == liste[x+3][i+3] == liste[x+4][i+4]and liste[x][i] != 0:
                    pygame.draw.rect(jeu,BLACK,(66*n,300,205,50),0)
                    fontObj = pygame.font.Font('freesansbold.ttf',20)
                    texteSurface = fontObj.render('Le joueur 1 a gagné' ,True,WHITE,BLACK)
                    texteRect = texteSurface.get_rect()
                    pygame.draw.rect(jeu,WHITE,(66*n,300,205,50),2)
                    texteRect.topleft = (67*n,315)
                    jeu.blit(texteSurface,texteRect)
                    fin()

        for i in range (n):
            for x in range (n-j+1):
                if liste[x][i] == liste[x+1][i-1] == liste[x+2][i-2] == liste[x+3][i-3] == liste[x+4][i-4]and liste[x][i] != 0:
                    pygame.draw.rect(jeu,BLACK,(66*n,300,205,50),0)
                    fontObj = pygame.font.Font('freesansbold.ttf',20)
                    texteSurface = fontObj.render('Le joueur 1 a gagné' ,True,WHITE,BLACK)
                    texteRect = texteSurface.get_rect()
                    pygame.draw.rect(jeu,WHITE,(66*n,300,205,50),2)
                    texteRect.topleft = (67*n,315)
                    jeu.blit(texteSurface,texteRect)
                    fin()

    if joueurActif[0] == 2:
        for i in range(n-j+1):
            for x in range(n):
                if liste[x][i] == liste[x][i+1] == liste[x][i+2] == liste[x][i+3] == liste[x][i+4]and liste[x][i] != 0:
                    pygame.draw.rect(jeu,BLACK,(66*n,300,205,50),0)
                    fontObj = pygame.font.Font('freesansbold.ttf',20)
                    texteSurface = fontObj.render('Le joueur 2 a gagné' ,True,WHITE,BLACK)
                    texteRect = texteSurface.get_rect()
                    pygame.draw.rect(jeu,WHITE,(66*n,300,205,50),2)
                    texteRect.topleft = (67*n,315)
                    jeu.blit(texteSurface,texteRect)
                    fin()

        for i in range (n):
           for x in range (n-j+1):
               if liste[x][i] == liste[x+1][i] == liste[x+2][i] == liste[x+3][i] == liste[x+4][i]and liste[x][i] != 0:
                    pygame.draw.rect(jeu,BLACK,(66*n,315,205,50),0)
                    fontObj = pygame.font.Font('freesansbold.ttf',20)
                    texteSurface = fontObj.render('Le joueur 2 a gagné' ,True,WHITE,BLACK)
                    texteRect = texteSurface.get_rect()
                    pygame.draw.rect(jeu,WHITE,(66*n,100,205,50),2)
                    texteRect.topleft = (67*n,315)
                    jeu.blit(texteSurface,texteRect)
                    fin()

        for i in range (n-j+1):
            for x in range (n-j+1):
                if liste[x][i] == liste[x+1][i+1] == liste[x+2][i+2] == liste[x+3][i+3] == liste[x+4][i+4] and liste[x][i] != 0:
                    pygame.draw.rect(jeu,BLACK,(66*n,300,205,50),0)
                    fontObj = pygame.font.Font('freesansbold.ttf',20)
                    texteSurface = fontObj.render('Le joueur 2 a gagné' ,True,WHITE,BLACK)
                    texteRect = texteSurface.get_rect()
                    pygame.draw.rect(jeu,WHITE,(66*n,300,205,50),2)
                    texteRect.topleft = (67*n,315)
                    jeu.blit(texteSurface,texteRect)
                    fin()

        for i in range (n):
            for x in range (n-j+1):
                if liste[x][i] == liste[x+1][i-1] == liste[x+2][i-2] == liste[x+3][i-3] == liste[x+4][i-4]and liste[x][i] != 0:
                    pygame.draw.rect(jeu,BLACK,(66*n,300,205,50),0)
                    fontObj = pygame.font.Font('freesansbold.ttf',20)
                    texteSurface = fontObj.render('Le joueur 2 a gagné' ,True,WHITE,BLACK)
                    texteRect = texteSurface.get_rect()
                    pygame.draw.rect(jeu,WHITE,(66*n,300,205,50),2)
                    texteRect.topleft = (67*n,315)
                    jeu.blit(texteSurface,texteRect)
                    fin()

def fin():
    chrono = 0
    while chrono < 10000:
        chrono += 1
    if chrono == 10000:
        sys.exit(0)

def quadrant(jeu,RED,RED1,liste1,b):

    n=len(liste1)/2

    pygame.draw.rect(jeu, RED, (50,50,50*n,50*n))
    pygame.draw.rect(jeu, RED, (n*50+55,50,50*n,50*n))
    pygame.draw.rect(jeu, RED, (50,n*50+55,50*n,50*n))
    pygame.draw.rect(jeu, RED, (n*50+55,n*50+55,50*n,50*n))

    x=0
    y=0

    for i in range(b):
        for a in range (b):

            if x > 45*b:
                x = 0
                y += 50
            pygame.draw.circle(jeu, RED1, (75+x,75+y), 10)
            liste1[i][a] = pygame.Rect(75+x,75+y,10,10)
            x += 50



def tour(event,joueurActif,jeu,WHITE,BLACK,liste,b,liste1,flecheOK):


    rfle1 = pygame.draw.rect(jeu,BLACK,(17*b,3*b,43,25),0)
    rfle2 = pygame.draw.rect(jeu,BLACK,(42*b,3*b,43,25),0)
    rfle3 = pygame.draw.rect(jeu,BLACK,(59*b+1,17*b,25,43),0)
    rfle4 = pygame.draw.rect(jeu,BLACK,(59*b+1,42*b,25,43),0)
    rfle5 = pygame.draw.rect(jeu,BLACK,(42*b,59*b+1,43,25),0)
    rfle6 = pygame.draw.rect(jeu,BLACK,(17*b,59*b+1,43,25),0)
    rfle7 = pygame.draw.rect(jeu,BLACK,(3*b,42*b,25,43),0)
    rfle8 = pygame.draw.rect(jeu,BLACK,(3*b,17*b,25,43),0)

    if joueurActif [0]==1:

        pygame.draw.rect(jeu,BLACK,(66*b,25,205,50),0)
        fontObj = pygame.font.Font('freesansbold.ttf',20)
        texteSurface = fontObj.render('Poser un pion blanc' ,True,WHITE,BLACK)
        texteRect = texteSurface.get_rect()
        pygame.draw.rect(jeu,WHITE,(66*b,25,205,50),2)
        texteRect.topleft = (67*b,40)
        jeu.blit(texteSurface,texteRect)

    elif joueurActif [0]==2:
        pygame.draw.rect(jeu,BLACK,(66*b,25,205,50),0)
        fontObj = pygame.font.Font('freesansbold.ttf',20)
        texteSurface = fontObj.render('Poser un pion noir',True,WHITE,BLACK)
        texteRect = texteSurface.get_rect()
        pygame.draw.rect(jeu,WHITE,(66*b,25,205,50),2)
        texteRect.topleft = (67*b,40)
        jeu.blit(texteSurface,texteRect)


    for i in range(b):
        for a in range (b):
            if event.type == MOUSEBUTTONDOWN and liste1[i][a].collidepoint(event.pos) and liste[i][a]== 0 and flecheOK[0]==0:

                if joueurActif [0]==1 :
                    liste[i][a]=1
                    flecheOK[0]=1

                elif joueurActif [0]==2 :
                    liste[i][a]=2
                    flecheOK[0]=1

    if joueurActif[0] ==1:
        if flecheOK [0]==1:

            AffiFleches(jeu,BLACK,b)

            if event.type == MOUSEBUTTONDOWN and rfle1.collidepoint(event.pos):
                rotation(liste,1,True)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle2.collidepoint(event.pos):
                rotation(liste,2,False)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle3.collidepoint(event.pos):
                rotation(liste,2,True)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle4.collidepoint(event.pos):
                rotation(liste,4,False)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle5.collidepoint(event.pos):
                rotation(liste,4,True)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle6.collidepoint(event.pos):
                rotation(liste,3,False)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle7.collidepoint(event.pos):
                rotation(liste,3,True)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle8.collidepoint(event.pos):
                rotation(liste,1,False)
                joueurActif[0] = 2
                flecheOK[0]=0

    if joueurActif[0] ==2:
        if flecheOK [0]==1:

            AffiFleches(jeu,BLACK,b)

            if event.type == MOUSEBUTTONDOWN and rfle1.collidepoint(event.pos):
                rotation(liste,1,True)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle2.collidepoint(event.pos):
                rotation(liste,2,False)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle3.collidepoint(event.pos):
                rotation(liste,2,True)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle4.collidepoint(event.pos):
                rotation(liste,4,False)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle5.collidepoint(event.pos):
                rotation(liste,4,True)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle6.collidepoint(event.pos):
                rotation(liste,3,False)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle7.collidepoint(event.pos):
                rotation(liste,3,True)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle8.collidepoint(event.pos):
                rotation(liste,1,False)
                joueurActif[0] = 1
                flecheOK[0]=0


def tourordi(event,joueurActif,jeu,WHITE,BLACK,liste,b,liste1,flecheOK):

    rfle1 = pygame.draw.rect(jeu,BLACK,(17*b,3*b,43,25),0)
    rfle2 = pygame.draw.rect(jeu,BLACK,(42*b,3*b,43,25),0)
    rfle3 = pygame.draw.rect(jeu,BLACK,(59*b+1,17*b,25,43),0)
    rfle4 = pygame.draw.rect(jeu,BLACK,(59*b+1,42*b,25,43),0)
    rfle5 = pygame.draw.rect(jeu,BLACK,(42*b,59*b+1,43,25),0)
    rfle6 = pygame.draw.rect(jeu,BLACK,(17*b,59*b+1,43,25),0)
    rfle7 = pygame.draw.rect(jeu,BLACK,(3*b,42*b,25,43),0)
    rfle8 = pygame.draw.rect(jeu,BLACK,(3*b,17*b,25,43),0)

    if joueurActif [0]==1:

        pygame.draw.rect(jeu,BLACK,(66*b,25,205,50),0)
        fontObj = pygame.font.Font('freesansbold.ttf',20)
        texteSurface = fontObj.render('Poser un pion blanc' ,True,WHITE,BLACK)
        texteRect = texteSurface.get_rect()
        pygame.draw.rect(jeu,WHITE,(66*b,25,205,50),2)
        texteRect.topleft = (67*b,40)
        jeu.blit(texteSurface,texteRect)


    for i in range(b):
        for a in range (b):
            if event.type == MOUSEBUTTONDOWN and liste1[i][a].collidepoint(event.pos) and liste[i][a]== 0 and flecheOK[0]==0:

                if joueurActif [0]==1 :
                    liste[i][a]=1
                    flecheOK[0]=1

    if joueurActif [0]==2 :
        pygame.draw.rect(jeu,BLACK,(66*b,25,205,50),0)
        fontObj = pygame.font.Font('freesansbold.ttf',20)
        texteSurface = fontObj.render("Pose d'un pion noir",True,WHITE,BLACK)
        texteRect = texteSurface.get_rect()
        pygame.draw.rect(jeu,WHITE,(66*b,25,205,50),2)
        texteRect.topleft = (67*b,40)
        jeu.blit(texteSurface,texteRect)
        i = random.randint(0,b-1)
        a = random.randint(0,b-1)
        liste[i][a]=2
        sens = random.choice([True, False])
        cadran = random.randint(1,4)
        rotation(liste,cadran,sens)
        joueurActif[0]=1


    if joueurActif[0] ==1:
        if flecheOK [0]==1:

            AffiFleches(jeu,BLACK,b)

            if event.type == MOUSEBUTTONDOWN and rfle1.collidepoint(event.pos):
                rotation(liste,1,True)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle2.collidepoint(event.pos):
                rotation(liste,2,False)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle3.collidepoint(event.pos):
                rotation(liste,2,True)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle4.collidepoint(event.pos):
                rotation(liste,4,False)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle5.collidepoint(event.pos):
                rotation(liste,4,True)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle6.collidepoint(event.pos):
                rotation(liste,3,False)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle7.collidepoint(event.pos):
                rotation(liste,3,True)
                joueurActif[0] = 2
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle8.collidepoint(event.pos):
                rotation(liste,1,False)
                joueurActif[0] = 2
                flecheOK[0]=0

    if joueurActif[0] ==2:
        if flecheOK [0]==1:

            AffiFleches(jeu,BLACK,b)

            if event.type == MOUSEBUTTONDOWN and rfle1.collidepoint(event.pos):
                rotation(liste,1,True)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle2.collidepoint(event.pos):
                rotation(liste,2,False)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle3.collidepoint(event.pos):
                rotation(liste,2,True)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle4.collidepoint(event.pos):
                rotation(liste,4,False)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle5.collidepoint(event.pos):
                rotation(liste,4,True)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle6.collidepoint(event.pos):
                rotation(liste,3,False)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle7.collidepoint(event.pos):
                rotation(liste,3,True)
                joueurActif[0] = 1
                flecheOK[0]=0
            if event.type == MOUSEBUTTONDOWN and rfle8.collidepoint(event.pos):
                rotation(liste,1,False)
                joueurActif[0] = 1
                flecheOK[0]=0

def MajQuadrant(jeu,WHITE,BLACK,liste,b,liste1,RED,RED1):
    x=50
    y=50

    quadrant(jeu,RED,RED1,liste1,b)

    for i in range (len(liste)):
        for a in range (b):

            if liste[i][a]==1:
                pygame.draw.circle(jeu, WHITE, (75+a*x,75+i*y), 10)

            if liste[i][a]==2:
                pygame.draw.circle(jeu, BLACK, (75+a*x,75+i*y), 10)


def AffiFleches (jeu,BLACK,b):
    fleche1=pygame.image.load('fleche1.jpg')
    fleche2=pygame.image.load('fleche2.jpg')
    fleche3=pygame.image.load('fleche3.jpg')
    fleche4=pygame.image.load('fleche4.jpg')
    fleche5=pygame.image.load('fleche5.jpg')
    fleche6=pygame.image.load('fleche6.jpg')
    fleche7=pygame.image.load('fleche7.jpg')
    fleche8=pygame.image.load('fleche8.jpg')

    jeu.blit(fleche1,(17*b,3*b))
    jeu.blit(fleche2,(42*b,3*b))
    jeu.blit(fleche3,(59*b+1,17*b))
    jeu.blit(fleche4,(59*b+1,42*b))
    jeu.blit(fleche5,(42*b,59*b+1))
    jeu.blit(fleche6,(17*b,59*b+1))
    jeu.blit(fleche7,(3*b,42*b))
    jeu.blit(fleche8,(3*b,17*b))

def rotation(liste,cadran,sens):

    def rotateright(liste):
        liste = [list(liste) for liste in (zip(*liste[::-1]))]
        return liste

    def rotateleft(liste):
        liste = [list(liste) for liste in (zip(*liste[::-1]))]
        liste = [list(liste) for liste in (zip(*liste[::-1]))]
        liste = [list(liste) for liste in (zip(*liste[::-1]))]
        return liste

    if sens == True:

        if cadran == 1:
            cadrancopy = copy.deepcopy(liste)
            for i in range(len(liste)//2):
               cadrancopy.pop(-1)
            for x in range (len(liste)//2 ):
                for j in range(len(liste)//2 ):
                    cadrancopy[x].pop(-1)
            cadrancopy = rotateright(cadrancopy)
            for x in range(len(liste)//2):
                for y in range(len(liste)//2):
                    liste[x][y] = cadrancopy[x][y]

        if cadran == 2:
            cadrancopy = copy.deepcopy(liste)
            for i in range(len(liste)//2):
               cadrancopy.pop(-1)
            for x in range (len(liste)//2 ):
                for j in range(len(liste)//2 ):
                    cadrancopy[x].pop(0)
            cadrancopy = rotateright(cadrancopy)
            for x in range(len(liste)//2):
                for y in range(1,(len(liste)//2)+1):
                    liste[x][-y] = cadrancopy[x][-y]


        if cadran == 3:
            cadrancopy = copy.deepcopy(liste)
            for i in range(len(liste)//2):
               cadrancopy.pop(0)
            for x in range (len(liste)//2 ):
                for j in range(len(liste)//2 ):
                    cadrancopy[x].pop(-1)
            cadrancopy = rotateright(cadrancopy)
            for x in range(1,(len(liste)//2)+1):
                for y in range(len(liste)//2):
                    liste[-x][y] = cadrancopy[-x][y]

        if cadran == 4:
            cadrancopy = copy.deepcopy(liste)
            for i in range(len(liste)//2):
               cadrancopy.pop(0)
            for x in range (len(liste)//2 ):
                for j in range(len(liste)//2 ):
                    cadrancopy[x].pop(0)
            cadrancopy = rotateright(cadrancopy)
            for x in range(1,(len(liste)//2)+1):
                for y in range(1,(len(liste)//2)+1):
                    liste[-x][-y] = cadrancopy[-x][-y]
    else:

        if cadran == 1:
            cadrancopy = copy.deepcopy(liste)
            for i in range(len(liste)//2):
               cadrancopy.pop(-1)
            for x in range (len(liste)//2 ):
                for j in range(len(liste)//2 ):
                    cadrancopy[x].pop(-1)
            cadrancopy = rotateleft(cadrancopy)
            for x in range(len(liste)//2):
                for y in range(len(liste)//2):
                    liste[x][y] = cadrancopy[x][y]


        if cadran == 2:
            cadrancopy = copy.deepcopy(liste)
            for i in range(len(liste)//2):
               cadrancopy.pop(-1)
            for x in range (len(liste)//2 ):
                for j in range(len(liste)//2 ):
                    cadrancopy[x].pop(0)
            cadrancopy = rotateleft(cadrancopy)
            for x in range(len(liste)//2):
                for y in range(1,(len(liste)//2)+1):
                    liste[x][-y] = cadrancopy[x][-y]


        if cadran == 3:
            cadrancopy = copy.deepcopy(liste)
            for i in range(len(liste)//2):
               cadrancopy.pop(0)
            for x in range (len(liste)//2 ):
                for j in range(len(liste)//2 ):
                    cadrancopy[x].pop(-1)
            cadrancopy = rotateleft(cadrancopy)
            for x in range(1,(len(liste)//2)+1):
                for y in range(len(liste)//2):
                    liste[-x][y] = cadrancopy[-x][y]

        if cadran == 4:
            cadrancopy = copy.deepcopy(liste)
            for i in range(len(liste)//2):
               cadrancopy.pop(0)
            for x in range (len(liste)//2 ):
                for j in range(len(liste)//2 ):
                    cadrancopy[x].pop(0)
            cadrancopy = rotateleft(cadrancopy)
            for x in range(1,(len(liste)//2)+1):
                for y in range(1,(len(liste)//2)+1):
                    liste[-x][-y] = cadrancopy[-x][-y]

def menu1(jeu,WHITE,BLACK,n):
    fontObj = pygame.font.Font('freesansbold.ttf',25)
    texteSurface = fontObj.render('Selectionner la taille de la grille :',True,WHITE,BLACK)
    texteRect = texteSurface.get_rect()
    texteRect.topleft = (175,40)
    jeu.blit(texteSurface,texteRect)

    G6 = pygame.draw.rect(jeu,BLACK,(100,132,197,197),0)
    G8 = pygame.draw.rect(jeu,BLACK,(400,100,259,259),0)
    Grille6=pygame.image.load('grille6x6.jpg')
    Grille8=pygame.image.load('grille8x8.jpg')
    jeu.blit(Grille6,(100,132))
    jeu.blit(Grille8,(400,100))




    inProgress = True
    while inProgress:
        for event in pygame.event.get():
            if event.type == QUIT:
                inProgress = False
            if event.type == MOUSEBUTTONDOWN and G6.collidepoint(event.pos):
                n[0]=6
                return
            if event.type == MOUSEBUTTONDOWN and G8.collidepoint(event.pos):
                n[0]=8
                return
        pygame.display.update()
    pygame.quit()

def menu2 (jeu,WHITE,BLACK,nbrJoueur):
    fontObj = pygame.font.Font('freesansbold.ttf',25)
    texteSurface = fontObj.render('Selectionner le nombre de joueur :',True,WHITE,BLACK)
    texteRect = texteSurface.get_rect()
    texteRect.topleft = (175,40)
    jeu.blit(texteSurface,texteRect)

    j1 = pygame.draw.rect(jeu,BLACK,(160,200,140,50),0)
    texteSurface = fontObj.render('1 joueur',True,WHITE,BLACK)
    texteRect = texteSurface.get_rect()
    texteRect.topleft = (177,215)
    pygame.draw.rect(jeu,WHITE,(160,200,140,50),2)
    jeu.blit(texteSurface,texteRect)

    j2 = pygame.draw.rect(jeu,BLACK,(480,200,140,50),0)
    texteSurface = fontObj.render('2 joueurs',True,WHITE,BLACK)
    texteRect = texteSurface.get_rect()
    texteRect.topleft = (496,215)
    pygame.draw.rect(jeu,WHITE,(480,200,140,50),2)
    jeu.blit(texteSurface,texteRect)


    inProgress = True
    while inProgress:
        for event in pygame.event.get():
            if event.type == QUIT:
                inProgress = False
            if event.type == MOUSEBUTTONDOWN and j1.collidepoint(event.pos):
                nbrJoueur[0]=1
                return
            if event.type == MOUSEBUTTONDOWN and j2.collidepoint(event.pos):
                nbrJoueur[0]=2
                return
        pygame.display.update()
    pygame.quit()

def sauvegarde(jeu,b,BLACK,WHITE,liste,event):
    sauvegarde = pygame.draw.rect(jeu,BLACK,(66*b,250,205,50),0)
    fontObj = pygame.font.Font('freesansbold.ttf',25)
    texteSurface = fontObj.render('Sauvegarder',True,WHITE,BLACK)
    texteRect = texteSurface.get_rect()
    pygame.draw.rect(jeu,WHITE,(66*b,250,205,50),2)
    texteRect.topleft = (69*b+4,263)
    jeu.blit(texteSurface,texteRect)

    if event.type == MOUSEBUTTONDOWN and sauvegarde.collidepoint(event.pos):


        if b==6:
            with open('6x6.txt','wb') as fichier:
                mon_pickler = pickle.Pickler(fichier)
                mon_pickler.dump(liste)
        if b==8:
            with open('8x8.txt','wb') as fichier:
                mon_pickler = pickle.Pickler(fichier)
                mon_pickler.dump(liste)

fenetre()
