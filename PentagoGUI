    HAUTEUR =525
    LARGEUR = 800
    WHITE = (255,255,255)
    RED = (155,0,0)
    BLACK = (0,0,0)
    RED1 = (120,0,0)
    jeu = pygame.display.set_mode((LARGEUR,HAUTEUR))
    pygame.display.set_caption("Pentago GUI")
    n=[6]
    nbrJoueur=[0]
    menu1 (jeu,WHITE,BLACK,n)
    pygame.draw.rect(jeu,BLACK,(0,0,800,525),0)
    menu2 (jeu,WHITE,BLACK,nbrJoueur)
    pygame.draw.rect(jeu,BLACK,(0,0,800,525),0)
    liste = [[0]*n[0] for i in range (n[0])]
    liste1 = copy.deepcopy(liste)
    b=len(liste)
    joueurActif=[1]
    flecheOK=[0]

    quadrant(jeu,RED,RED1,liste1,b)

    if nbrJoueur[0]==2:
        inProgress = True
        while inProgress:

            for event in pygame.event.get():
                if event.type == QUIT:
                    inProgress = False
                sauvegarde(jeu,b,BLACK,WHITE,liste,event,flecheOK,joueurActif)

                ChargSauve = pygame.draw.rect(jeu,BLACK,(66*b,350,145,50),0)
                fontObj = pygame.font.Font('freesansbold.ttf',25)
                texteSurface = fontObj.render('Charger',True,WHITE,BLACK)
                texteRect = texteSurface.get_rect()
                pygame.draw.rect(jeu,WHITE,(66*b,350,145,50),2)
                texteRect.topleft = (69*b+4,363)
                jeu.blit(texteSurface,texteRect)

                if event.type == MOUSEBUTTONDOWN and ChargSauve.collidepoint(event.pos) and flecheOK[0]==0:

                    if b==6:
                        with open('6x6.txt', 'rb') as fichier:
                            mon_depickler = pickle.Unpickler(fichier)
                            liste = mon_depickler.load()
                        with open('6x6etat.txt', 'rb') as fichier:
                            mon_depickler1 = pickle.Unpickler(fichier)
                            joueurActif = mon_depickler1.load()

                    if b==8:
                        with open('8x8.txt', 'rb') as fichier:
                            mon_depickler = pickle.Unpickler(fichier)
                            liste = mon_depickler.load()
                        with open('8x8etat.txt', 'rb') as fichier:
                            mon_depickler1 = pickle.Unpickler(fichier)
                            joueurActif = mon_depickler1.load()

                MajQuadrant(jeu,WHITE,BLACK,liste,b,liste1,RED,RED1)

                tour(event,joueurActif,jeu,WHITE,BLACK,liste,b,liste1,flecheOK)
            pygame.display.update()
        pygame.quit()

    elif nbrJoueur[0]==1:
        inProgress = True
        while inProgress:
            for event in pygame.event.get():
                if event.type == QUIT:
                    inProgress = False
                sauvegarde(jeu,b,BLACK,WHITE,liste,event,flecheOK,joueurActif)

                ChargSauve = pygame.draw.rect(jeu,BLACK,(66*b,350,145,50),0)
                fontObj = pygame.font.Font('freesansbold.ttf',25)
                texteSurface = fontObj.render('Charger',True,WHITE,BLACK)
                texteRect = texteSurface.get_rect()
                pygame.draw.rect(jeu,WHITE,(66*b,350,145,50),2)
                texteRect.topleft = (69*b+4,363)
                jeu.blit(texteSurface,texteRect)

                if event.type == MOUSEBUTTONDOWN and ChargSauve.collidepoint(event.pos):

                    if b==6:
                        with open('6x6.txt', 'rb') as fichier:
                            mon_depickler = pickle.Unpickler(fichier)
                            liste = mon_depickler.load()
                        with open('6x6etat.txt', 'rb') as fichier:
                            mon_depickler1 = pickle.Unpickler(fichier)
                            joueurActif = mon_depickler1.load()

                    if b==8:
                        with open('8x8.txt', 'rb') as fichier:
                            mon_depickler = pickle.Unpickler(fichier)
                            liste = mon_depickler.load()
                        with open('8x8etat.txt', 'rb') as fichier:
                            mon_depickler1 = pickle.Unpickler(fichier)
                            joueurActif = mon_depickler1.load()

                alignements(jeu,liste,BLACK,WHITE,joueurActif)
                MajQuadrant(jeu,WHITE,BLACK,liste,b,liste1,RED,RED1)
                tourordi(event,joueurActif,jeu,WHITE,BLACK,liste,b,liste1,flecheOK)

            pygame.display.update()
        pygame.quit()
